/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.pucv.mavenproject1;

import entidades.Artista;
import entidades.Exposicion;
import entidades.ObraArte;
import entidades.LectorCVS;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import entidades.Ventas;
import entidades.Inventario;

/**
 *
 * @author tomas
 */
public class VentanaMain extends javax.swing.JFrame {
    private ArrayList<Artista> listaArtistas;
    private ArrayList<ObraArte> listaObras;
    private Map<Integer, Exposicion> exposiciones = new HashMap<>();
    private Ventas sistemaVentas;
    private Inventario inventarioGeneral;

    /**
     * Creates new form VentanaMain
     */
    public VentanaMain(){
        this.listaArtistas = new ArrayList<>();
        this.listaObras = new ArrayList<>();
        this.exposiciones = new HashMap<>();
        this.sistemaVentas = new Ventas();
        this.inventarioGeneral = new Inventario();
        initComponents();
        configurarMenuListeners();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuCargarDatos = new javax.swing.JMenu();
        menuAgregarObra = new javax.swing.JMenu();
        menuCrearExposicion = new javax.swing.JMenu();
        menuEditar = new javax.swing.JMenu();
        menuReportes = new javax.swing.JMenu();
        menuVentas = new javax.swing.JMenu();
        menuEliminar = new javax.swing.JMenu();
        menuSalir = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        jScrollPane2.setViewportView(jTextPane1);

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("GALERIA DE ARTE");

        menuCargarDatos.setText("Cargar Datos");
        jMenuBar1.add(menuCargarDatos);

        menuAgregarObra.setText("Agregar Obra");
        menuAgregarObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAgregarObraActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuAgregarObra);

        menuCrearExposicion.setText("Crear Exposicion");
        jMenuBar1.add(menuCrearExposicion);

        menuEditar.setText("Editar ");
        jMenuBar1.add(menuEditar);

        menuReportes.setText("Reportes");
        jMenuBar1.add(menuReportes);

        menuVentas.setText("Ventas");
        menuVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVentasActionPerformed(evt);
            }
        });
        jMenuBar1.add(menuVentas);

        menuEliminar.setText("Eliminar ");
        jMenuBar1.add(menuEliminar);

        menuSalir.setText("Salir");
        jMenuBar1.add(menuSalir);
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(327, 327, 327)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(336, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAgregarObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAgregarObraActionPerformed
        
    }//GEN-LAST:event_menuAgregarObraActionPerformed

    private void menuVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVentasActionPerformed
        // TODO add your handling code here:
        VentanaVentas ventana = new VentanaVentas(exposiciones, inventarioGeneral, sistemaVentas);
        ventana.setVisible(true);
    }//GEN-LAST:event_menuVentasActionPerformed
                                         

    private void configurarMenuListeners()
    {
        // Configurar menú "Cargar Datos"
        menuCargarDatos.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                cargarDatosCSV();
            }
        });
        
        // Configurar menú "Agregar Obra" 
        menuAgregarObra.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abrirVentanaAgregar();
            }
        });
        
        // Configurar menú "Crear Exposicion"
        menuCrearExposicion.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                // Aquí puedes agregar la lógica para crear exposición
                JOptionPane.showMessageDialog(VentanaMain.this, "Función Crear Exposición - Por implementar");
            }
        });
        
        // Configurar menú "Editar"
        menuEditar.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                abrirVentanaEditar();
            }
        });
        
        // Configurar menú "Reportes"
        menuReportes.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                // Aquí puedes agregar la lógica para reportes
                //JOptionPane.showMessageDialog(VentanaMain.this, "Función Reportes - Por implementar");
                if (listaArtistas.isEmpty()) {
                    JOptionPane.showMessageDialog(VentanaMain.this, "Primero cargue datos CSV");
                    return;
                }
                VentanaReportes ventanaReportes = new VentanaReportes(listaArtistas, listaObras, exposiciones);
                ventanaReportes.setVisible(true);
            }
        });
        
        // Configurar menú "Eliminar" - AHORA CON MOUSELISTENER
        menuEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abrirVentanaEliminar();
            }
        });
        
        // Configurar menú "Ventas"
        menuVentas.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                // Aquí puedes agregar la lógica para ventas
                JOptionPane.showMessageDialog(VentanaMain.this, "Función Ventas - Por implementar");
            }
        });
        
        
        
        // Configurar menú "Salir"
        menuSalir.addMouseListener(new java.awt.event.MouseAdapter()
        {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                confirmarSalida();
            }
        });
    }
    
    private void abrirVentanaAgregar()
    {
        if (listaArtistas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Primero cargue datos CSV");
            return;
        }
        VentanaAgregar ventanaDeAgregar = new VentanaAgregar(listaArtistas, listaObras);
        ventanaDeAgregar.setVisible(true);
    }
    
    private void abrirVentanaEditar()
    {
        if (listaArtistas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Primero cargue datos CSV");
            return;
        }
        VentanaEditarObra ventanaEditarObra = new VentanaEditarObra(listaArtistas, listaObras);
        ventanaEditarObra.setVisible(true);
    }
    
    private void abrirVentanaEliminar()
    {
        if (listaArtistas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Primero cargue datos CSV");
            return;
        }
        VentanaEliminar ventanaEliminar = new VentanaEliminar(listaArtistas, listaObras);
        ventanaEliminar.setVisible(true);
    }
    
    private void cargarDatosCSV()
    {
        try
        {
            Map<String, Object> datos = LectorCVS.leerDatosDesdeCSV();
            
            ArrayList<Artista> artistasCargados = (ArrayList<Artista>) datos.get("artistas");
            ArrayList<ObraArte> obrasCargadas = (ArrayList<ObraArte>) datos.get("obras");
            
            this.listaArtistas.addAll(artistasCargados);
            this.listaObras.addAll(obrasCargadas);
            
            JOptionPane.showMessageDialog(this,"Datos cargados exitosamente!\n" + 
                "Artistas: " + artistasCargados.size() + "\n" + 
                "Obras: " + obrasCargadas.size(),"Éxito", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (IOException e)
        {
            JOptionPane.showMessageDialog(this,"Error al cargar el CSV:\n" + e.getMessage(), 
                "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void confirmarSalida()
    {
        int respuesta = JOptionPane.showConfirmDialog(
            this, 
            "¿Está seguro que desea salir del programa?", 
            "Confirmar salida", 
            JOptionPane.YES_NO_OPTION
        );
        
        if (respuesta == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JMenu menuAgregarObra;
    private javax.swing.JMenu menuCargarDatos;
    private javax.swing.JMenu menuCrearExposicion;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenu menuEliminar;
    private javax.swing.JMenu menuReportes;
    private javax.swing.JMenu menuSalir;
    private javax.swing.JMenu menuVentas;
    // End of variables declaration//GEN-END:variables
}
